version: '3.8'
services:

  # haproxy01:
  #   image: anti1346/ubuntu2204:init
  #   restart: always
  #   container_name: haproxy01
  #   hostname: haproxy01
  #   privileged: true
  #   command: ["/lib/systemd/systemd"]
  #   # volumes:
  #   #   - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
  #   ports:
  #     - "8081:80"
  #     - "8443:443"
  #     - "9001:9000"
  #     - "2201:22"
  #   networks:
  #     my_network:
  #       ipv4_address: 172.19.0.2

  # haproxy02:
  #   image: anti1346/ubuntu2204:init
  #   restart: always
  #   container_name: haproxy02
  #   hostname: haproxy02
  #   privileged: true
  #   command: ["/lib/systemd/systemd"]
  #   # volumes:
  #   #   - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
  #   ports:
  #     - "8082:80"
  #     - "8444:443"
  #     - "9002:9000"
  #     - "2202:22"
  #   networks:
  #     my_network:
  #       ipv4_address: 172.19.0.3

  web01:
    image: anti1346/ubuntu2204:init
    restart: always
    container_name: web01
    hostname: web01
    privileged: true
    command: ["/lib/systemd/systemd"]
    # volumes:
    #   - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
    ports:
      - "8011:80"
      - "2211:22"
    networks:
      my_network:
        ipv4_address: 172.19.0.11

  web02:
    image: anti1346/ubuntu2204:init
    restart: always
    container_name: web02
    hostname: web02
    privileged: true
    command: ["/lib/systemd/systemd"]
    # volumes:
    #   - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
    ports:
      - "8012:80"
      - "2212:22"
    networks:
      my_network:
        ipv4_address: 172.19.0.12

  ansible:
    image: anti1346/ubuntu2204:ansible
    restart: always
    container_name: ansible
    hostname: ansible
    # volumes:
    #   - /usr/share/zoneinfo/Asia/Seoul:/etc/localtime:ro
    ports:
      - "2222:22"
    networks:
      my_network:
        ipv4_address: 172.19.0.201

networks:
  my_network:
    name: my_network
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24
